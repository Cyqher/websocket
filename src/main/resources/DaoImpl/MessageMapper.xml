<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.websocket.Dao.MessageMapper">
    <insert id="addMessage" parameterType="com.example.websocket.PO.Message" useGeneratedKeys="true" keyProperty="id">
        insert into message(content,from_user,to_user,state,time) values (#{content},#{from_user},#{to_user},#{state},#{time})
    </insert>

    <insert id="addTeamMessage" parameterType="com.example.websocket.PO.GrpMsg" useGeneratedKeys="true" keyProperty="id">
        insert into team_message(content,from_user,from_username,team_id,team_name,time) values (#{content},#{fromUser},#{fromUsername},#{teamId},#{teamName},#{time})
    </insert>

    <insert id="addTeamMessageState">
        insert into team_message_state(message_id,user_id,team_id,state) values (#{messageId},#{userId},#{teamId},#{state})
    </insert>

    <insert id="sendInvitation">
        insert into invitation(from_username,to_user,team_id,team_name,state,time) values (#{fromUsername},#{toUser},#{teamId},#{teamName},#{state},#{time})
    </insert>

    <select id="getRecentMessages" resultMap="Message">
        select * from message where from_user=#{senderId} and to_user=#{receiverId} order by time desc limit 5
    </select>

    <select id="getAllMessages" resultMap="Message">
        select * from message where from_user=#{senderId} and to_user=#{receiverId} order by time desc
    </select>
    <select id="getAllInvitations" resultMap="Invitation">
        select * from invitation where to_user=#{toUser}
    </select>

    <select id="getUnreadSenderId" resultType="int">
        select distinct from_user from message where to_user=#{receiverId} and state=0
    </select>

    <select id="getRecent30Days" resultMap="Message">
        select * from message where (to_user=#{toUser} or from_user=#{toUser}) and <![CDATA[ DATEDIFF(CURDATE(),time)<30]]>;
    </select>

    <select id="getGroupRecent30Days" resultMap="GrpMessage">
        select * from team_message where team_id=#{groupId} and <![CDATA[ DATEDIFF(CURDATE(),time)<30]]>;
    </select>

    <select id="getTeamIdsByUserId" resultType="int">
        select distinct team_id from team_user where user_id=#{userId}
    </select>

    <select id="getUserIdByTeamId" resultType="int">
        select distinct user_id from team_user where team_id=#{teamId}
    </select>

    <select id="getNameByGrpId" resultType="String">
        select name from team where id = #{groupId}
    </select>

    <update id="updateState">
        update message set state=1 where from_user=#{senderId} and to_user=#{receiverId} and state=0
    </update>

    <update id="updateTeamState">
        update team_message_state set state=1 where team_id=#{teamId} and user_id=#{userId} and state=0
    </update>

    <update id="updateInvitationState">
        update invitation set state=#{newState} where id=#{id}
    </update>


    <resultMap id="Message" type="com.example.websocket.PO.Message">
        <result column="id" property="id"></result>
        <result column="from_user" property="from_user"></result>
        <result column="to_user" property="to_user"></result>
        <result column="content" jdbcType="VARCHAR" property="content"></result>
        <result column="state" property="state"></result>
        <result column="time" property="time"></result>
    </resultMap>

    <resultMap id="Invitation" type="com.example.websocket.PO.Invitation">
        <result column="id" property="id"></result>
        <result column="from_username" property="fromUsername"></result>
        <result column="to_user" property="toUser"></result>
        <result column="team_id" property="teamId"></result>
        <result column="team_name" property="teamName"></result>
        <result column="state" property="state"></result>
        <result column="time" property="time"></result>
    </resultMap>

    <resultMap id="GrpMessage" type="com.example.websocket.PO.GrpMsg">
        <result column="id" property="id"></result>
        <result column="content" property="content"></result>
        <result column="from_user" property="fromUser"></result>
        <result column="from_username" property="fromUsername"></result>
        <result column="team_id" property="teamId"></result>
        <result column="team_name" property="teamName"></result>
        <result column="time" property="time"></result>
    </resultMap>

</mapper>
